<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AiIgCIiAf//Z
</value>
  </data>
</root>